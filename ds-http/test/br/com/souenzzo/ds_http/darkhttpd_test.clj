(ns br.com.souenzzo.ds-http.darkhttpd-test
  (:require [clojure.test :refer [deftest is testing]]
            [br.com.souenzzo.ds-http.darkhttpd :as darkhttpd]
            [clojure.java.io :as io])
  (:import (java.time Clock)))

(set! *warn-on-reflection* true)


(defn mapfile
  [m]
  (reify darkhttpd/IFile
    (list-files [this]
      (map mapfile (vals m)))
    (file? [this]
      (string? m))
    (directory? [this]
      (map? m))
    io/IOFactory
    (io/make-reader [this opts]
      (if (string? m)
        (io/reader (.getBytes ^String m))
        (throw (ex-info "Can't slup a dir" m))))))

(defn mapfs
  [m]
  (reify darkhttpd/IFS
    (file [_ name]
      (mapfile (get m name)))))


(deftest foo
  (is (= {:body    "<html><head><title>404 Not Found</title></head><body><h1>Not Found</h1>
The URL you requested (/not-found) was not found.
<hr></hr>
Generated by br.com.souenzzo.ds-http.darkhttpd on Sat, 2000-01-01T00:00:00Z
</body></html>"
          :headers {"Accept-Ranges" "bytes"
                    "Content-Type"  "text/html; charset=UTF-8"
                    "Date"          "2000-01-01T00:00:00Z"
                    "Keep-Alive"    "timeout=60"
                    "Server"        "br.com.souenzzo.ds-http.darkhttpd"}
          :status  404}
         (darkhttpd/handler
           {:ring.request/path "/not-found"
            ::darkhttpd/fs     (mapfs {"./" {"deps.edn" "{}"
                                             "src"      {"core.clj" "(ns core)"}}})
            ::darkhttpd/clock  (proxy [Clock] []
                                 (instant []
                                   (.toInstant #inst"2000")))})))
  (is (= {:body    "<html><head><title>/</title></head><body><h1>/</h1><tt></tt><pre><tt><a><href>..</href>..</a>/
<a><href>a</href>a</a>         2
<a><href>a</href>a</a>/
</tt></pre><tt></tt><hr></hr>
Generated by br.com.souenzzo.ds-http.darkhttpd on 2000-01-01T00:00:00Z
</body></html>"
          :headers {"Accept-Ranges" "bytes"
                    "Content-Type"  "text/html; charset=UTF-8"
                    "Date"          "2000-01-01T00:00:00Z"
                    "Keep-Alive"    "timeout=60"
                    "Server"        "br.com.souenzzo.ds-http.darkhttpd"}
          :status  200}
         (darkhttpd/handler
           {:ring.request/path "/"
            ::darkhttpd/fs     (mapfs {"./" {"deps.edn" "{}"
                                             "src"      {"core.clj" "(ns core)"}}})
            ::darkhttpd/clock  (proxy [Clock] []
                                 (instant []
                                   (.toInstant #inst"2000")))})))
  (is (= {:body    "{:deps {}}"
          :headers {"Accept-Ranges" "bytes"
                    "Content-Type"  "application/octet-stream"
                    "Date"          "2000-01-01T00:00:00Z"
                    "Keep-Alive"    "timeout=60"
                    "Last-Modified" "Sat, 29 Aug 2020 01:48:51 GMT"
                    "Server"        "br.com.souenzzo.ds-http.darkhttpd"}
          :status  200}
         (darkhttpd/handler
           {:ring.request/path "/deps.edn"
            ::darkhttpd/fs     (mapfs {"./"         {"deps.edn" "{}"
                                                     "src"      {"core.clj" "(ns core)"}}
                                       "./deps.edn" "{:deps {}}"})
            ::darkhttpd/clock  (proxy [Clock] []
                                 (instant []
                                   (.toInstant #inst"2000")))}))))
